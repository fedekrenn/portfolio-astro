---
import type { Project } from "@utils/types.ts";

type Props = {
  experience: Project;
};

const { experience } = Astro.props;

const {
  title,
  description,
  image,
  client,
  date,
  deploy,
  repository,
  newTool,
  tecnologies,
} = experience;

const realProyect = client !== "Proyecto personal";
---

<section>
  <h1>{title}</h1>
  <figure>
    <img src={`/images/${image}`} alt={title} />
    <figcaption>
      {
        realProyect && (
          <p>
            <strong>Desarrollado para:</strong>
            {client}
          </p>
        )
      }
      <p>
        <strong>Fecha:</strong>
        {date}
      </p>
    </figcaption>
  </figure>
  <div class="btn-container">
    {
      deploy && (
        <a class="btn" href={deploy} target="_blank">
          Deploy
        </a>
      )
    }
    <a class="btn" href={repository} target="_blank">Repositorio</a>
  </div>
</section>
<hr />
<section>
  <p>{description}</p>
</section>
<hr />
<section class="details-container">
  <details>
    <summary>
      <h2>Tecnologías utilizadas:</h2>
    </summary>
    <p>
      En este proyecto utilicé las siguientes tecnologías, librerías y
      frameworks:
    </p>
    <ul>
      {tecnologies.map((tecnology) => <li class="tag">{tecnology}</li>)}
    </ul>
  </details>
  <details>
    <summary>
      <h2>Nueva herramienta:</h2>
    </summary>
    <p>
      En todos los proyectos intento aplicar un nuevo concepto, tecnología,
      librería, herramienta, etc que no haya utilizado antes. En este proyecto

      <span>aprendí</span>:
    </p>
    <ul>
      <li class="tag">{newTool}</li>
    </ul>
  </details>
</section>

<style>
  section {
    width: 100%;
  }

  h1 {
    width: fit-content;
    margin: 0 auto;
    font-size: 2.5rem;
    font-weight: 700;
    background: linear-gradient(45deg, var(--secondary), #e4e4d9);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  figure {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 50px 0;
  }

  figcaption {
    display: flex;
    align-items: center;
    justify-content: space-around;
    width: 100%;
    font-size: 0.7em;
    color: #ffffffcb;
    margin-top: 5px;
  }

  strong {
    font-weight: 700;
  }

  img {
    width: 100%;
    max-width: 800px;
    border-radius: 10px;
  }

  .btn-container {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 40px;
  }

  .btn {
    text-align: center;
    width: 150px;
  }

  hr {
    width: 100%;
    max-width: 600px;
    border: none;
    border-bottom: 1px solid #e4e4d9;
    margin: 50px auto;
  }

  p {
    font-weight: 400;
    span {
      font-weight: 700;
      color: var(--secondary);
    }
  }

  .details-container {
    display: flex;
    flex-direction: column;
    gap: 40px;
  }

  .tag {
    padding: 5px 15px;
    font-size: 0.7em;
    margin: 15px 0;
  }

  ul {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
  }

  summary {
    cursor: pointer;
    h2 {
      font-size: 1.5rem;
      font-weight: 700;
      margin: 20px 0;
      display: inline-block;
    }
  }

  details[open] summary ~ * {
    animation: open 0.3s ease-in-out;
  }

  @keyframes open {
    0% {
      opacity: 0;
      transform: translateY(-10px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
